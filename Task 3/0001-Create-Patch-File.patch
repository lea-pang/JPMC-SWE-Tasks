From 3ed2b565ecf5442595a5851a6d46a234d6d904bf Mon Sep 17 00:00:00 2001
From: Lea Pang <leapang01@gmail.com>
Date: Sun, 13 Jun 2021 14:22:55 -0700
Subject: [PATCH] Create Patch File

---
 src/DataManipulator.ts | 34 +++++++++++++++++++++++-----------
 src/Graph.tsx          | 30 ++++++++++++++++++------------
 2 files changed, 41 insertions(+), 23 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index f6b15ff..09463fa 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,32 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
-  timestamp: Date,
+      abc_price:number,
+      def_price:number,
+      ratio:number,
+      timestamp:Date;
+      upper:number,
+      lower:number,
+      trigger_alert:number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]): Row[] {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
+  static generateRow(serverResponds: ServerRespond[]): Row {
+    // Generates the row attributes of ABC/DEF price, ratio between the two, upper/lower bounds, and timestamp
+      const abc = (serverResponds[0].top_ask.price + serverResponds[0].top_bid.price) / 2;
+      const def =  (serverResponds[1].top_ask.price + serverResponds[1].top_bid.price) / 2;
+      const abc_def_ratio = abc / def;
+      const upper_bound = 1 + 0.1;
+      const lower_bound = 1 - 0.1;
+      return{
+        abc_price: abc,
+        def_price: def,
+        ratio:abc_def_ratio,
+        timestamp: serverResponds[0].timestamp > serverResponds[1].timestamp ? serverResponds[0].timestamp : serverResponds[1].timestamp,
+        upper: upper_bound, 
+        lower: lower_bound,
+        trigger_alert: (abc_def_ratio>upper_bound || abc_def_ratio < lower_bound) ? abc_def_ratio : undefined,
+      }; 
   }
 }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 58fb997..44c834f 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -22,11 +22,15 @@ class Graph extends Component<IProps, {}> {
     // Get element from the DOM.
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
+    // Updated schema to contain both stock prices, ratio, time stamp, upper/lower bounds, and trigger alert
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+      abc_price: 'float',
+      def_price: 'float',
+      ratio: 'float',
       timestamp: 'date',
+      upper: 'float',
+      lower: 'float',
+      trigger_alert: 'float',
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -36,23 +40,25 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
-      elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
-        timestamp: 'distinct count',
+      elem.setAttribute('columns', '["ratio", "upper", "lower", "trigger_alert"]');
+      elem.setAttribute('aggregates', JSON.stringify({ // Updated setAttribute call to match new const schema
+        abc_price: 'avg',
+        def_price: 'avg',
+        ratio: 'avg',
+        timestamp: 'distinct_count',
+        upper: 'avg',
+        lower: 'avg',
+        trigger_alert: 'avg',
       }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ]);
     }
   }
 }
-- 
2.32.0.windows.1

